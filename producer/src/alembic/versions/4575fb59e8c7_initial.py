"""initial

Revision ID: c46ec9de2c79
Revises: 
Create Date: 2024-11-07 17:35:34.830988

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c46ec9de2c79'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('channels',
    sa.Column('channel', sa.Enum('EMAIL', 'SMS', 'WEBSOCKET', name='channelenum'), nullable=False),
    sa.Column('id', sa.Uuid(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('channel')
    )
    op.create_table('notificationstatus',
    sa.Column('status', sa.Enum('CREATED', 'PENDING', 'SENT', 'FAILED', name='statusenum'), nullable=False),
    sa.Column('id', sa.Uuid(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('status')
    )
    op.create_table('notificationtypes',
    sa.Column('name', sa.Enum('REGISTRATION', 'USER_LOGIN', 'NEW_EPISODE', 'NEW_LIKE', 'SUBSCRIPTION_DISCOUNT', name='typeenum'), nullable=False),
    sa.Column('is_instant', sa.Boolean(), nullable=False),
    sa.Column('description', sa.String(length=512), nullable=True),
    sa.Column('id', sa.Uuid(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('contents',
    sa.Column('type_id', sa.Uuid(), nullable=False),
    sa.Column('payload', sa.JSON(), nullable=False),
    sa.Column('id', sa.Uuid(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['type_id'], ['notificationtypes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notificationtemplates',
    sa.Column('type_id', sa.Uuid(), nullable=False),
    sa.Column('template', sa.Text(), nullable=False),
    sa.Column('id', sa.Uuid(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['type_id'], ['notificationtypes.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('template'),
    sa.UniqueConstraint('type_id')
    )
    op.create_table('notifications',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('type_id', sa.Uuid(), nullable=False),
    sa.Column('content_id', sa.Uuid(), nullable=False),
    sa.Column('template_id', sa.Uuid(), nullable=False),
    sa.Column('status_id', sa.Uuid(), nullable=False),
    sa.Column('datetime_to_send', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['content_id'], ['contents.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['notificationstatus.id'], ),
    sa.ForeignKeyConstraint(['template_id'], ['notificationtemplates.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['notificationtypes.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('content_id')
    )
    op.create_table('notificationchannel',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('notification_id', sa.Uuid(), nullable=False),
    sa.Column('channel_id', sa.Uuid(), nullable=False),
    sa.Column('value', sa.String(length=128), nullable=True),
    sa.ForeignKeyConstraint(['channel_id'], ['channels.id'], ),
    sa.ForeignKeyConstraint(['notification_id'], ['notifications.id'], ),
    sa.PrimaryKeyConstraint('id', 'notification_id', 'channel_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('notificationchannel')
    op.drop_table('notifications')
    op.drop_table('notificationtemplates')
    op.drop_table('contents')
    op.drop_table('notificationtypes')
    op.drop_table('notificationstatus')
    op.drop_table('channels')
    # ### end Alembic commands ###
